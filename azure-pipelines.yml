trigger:
- master

variables:
  dockerImageName: 'nodejsimage'
  helmChartName: 'myapp-chart'
  helmReleaseName: 'myapp-release'
  acrName: 'kubeacr1'
  resourceGroupName: 'rgterra'
  aksClusterName: 'akstf'
  helmRepoUrl: 'https://github.com/collectorias53/helmchartauto'
  helmChartPath: '/home/vsts/work/1/s/NodeJsSampleAPI-main'

pool:
  vmImage: ubuntu-latest

stages:
# Build Stage
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'ACR_ServiceConnection_1'
        repository: '$(dockerImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: 'latest'

    - script: mkdir -p $(helmChartPath)
      displayName: 'Create helmado1 directory'

    - script: git clone $(helmRepoUrl) $(helmChartPath)
      displayName: 'Clone Helm chart repository into helmado1'

    - script: ls -la $(helmChartPath)
      displayName: 'List contents of helmado1 directory'

    - script: |
        sed -i 's|image: .*|image: $(acrName).azurecr.io/$(dockerImageName):$(Build.BuildId)|' $(helmChartPath)/values.yaml
      displayName: 'Update Helm chart with new image tag'

    - task: HelmDeploy@1
      inputs:
        azureSubscriptionForACR: 'spconnection'
        azureResourceGroupForACR: '$(resourceGroupName)'
        azureContainerRegistry: '$(acrName).azurecr.io'
        command: 'package'
        chartPath: '$(helmChartPath)'
        chartNameForACR: '$(helmChartName)'
        destination: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# Deploy Stage
- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployJob
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    # List files to verify the Helm chart package
    - script: ls -la $(System.ArtifactsDirectory)/drop
      displayName: 'List contents of drop directory'

    # Deploy the Helm chart to the AKS cluster
    - task: HelmDeploy@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'spconnection'
        azureResourceGroup: '$(resourceGroupName)'
        kubernetesCluster: '$(aksClusterName)'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(System.ArtifactsDirectory)/drop/nodesampleapi-0.1.0.tgz'
        releaseName: '$(helmReleaseName)'
        install: true
        waitForExecution: true
        arguments: '--timeout 5m0s'
